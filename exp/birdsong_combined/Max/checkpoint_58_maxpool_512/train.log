Downstream Task birdsong_combined
Resume False, load only efficient net True, from path /nlsasfs/home/nltm-pilot/sandeshk/icassp/checkpoints/checkpoint_58_maxpool_512.pth.tar 
BS 64
complete args Namespace(batch_size=64, down_stream_task='birdsong_combined', epochs=50, exp_root='./exp/birdsong_combined/Max/checkpoint_58_maxpool_512', final_pooling_type='Max', freeze_effnet=False, load_only_efficientNet=True, pretrain_path='/nlsasfs/home/nltm-pilot/sandeshk/icassp/checkpoints/checkpoint_58_maxpool_512.pth.tar', resume=False, tag='checkpoint_58_maxpool_512', use_l2='l2')
DeepCluster_downstream(
  (model_efficient): DataParallel(
    (module): EfficientNet(
      (_conv_stem): Conv2dDynamicSamePadding(1, 32, kernel_size=(3, 3), stride=(2, 2), bias=False)
      (_bn0): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      (_blocks): ModuleList(
        (0): MBConvBlock(
          (_depthwise_conv): Conv2dDynamicSamePadding(32, 32, kernel_size=(3, 3), stride=[1, 1], groups=32, bias=False)
          (_bn1): BatchNorm2d(32, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            32, 8, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            8, 32, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(16, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (1): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(96, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(96, 96, kernel_size=(3, 3), stride=[2, 2], groups=96, bias=False)
          (_bn1): BatchNorm2d(96, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            96, 4, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            4, 96, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (2): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(144, 144, kernel_size=(3, 3), stride=(1, 1), groups=144, bias=False)
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            144, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 144, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(24, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (3): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(144, 144, kernel_size=(5, 5), stride=[2, 2], groups=144, bias=False)
          (_bn1): BatchNorm2d(144, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            144, 6, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            6, 144, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (4): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(240, 240, kernel_size=(5, 5), stride=(1, 1), groups=240, bias=False)
          (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            240, 10, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            10, 240, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(40, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (5): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(240, 240, kernel_size=(3, 3), stride=[2, 2], groups=240, bias=False)
          (_bn1): BatchNorm2d(240, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            240, 10, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            10, 240, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(80, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (6): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(480, 480, kernel_size=(3, 3), stride=(1, 1), groups=480, bias=False)
          (_bn1): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            480, 20, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            20, 480, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(80, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (7): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(480, 480, kernel_size=(3, 3), stride=(1, 1), groups=480, bias=False)
          (_bn1): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            480, 20, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            20, 480, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(80, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (8): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(480, 480, kernel_size=(5, 5), stride=[1, 1], groups=480, bias=False)
          (_bn1): BatchNorm2d(480, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            480, 20, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            20, 480, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (9): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(672, 672, kernel_size=(5, 5), stride=(1, 1), groups=672, bias=False)
          (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            672, 28, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            28, 672, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (10): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(672, 672, kernel_size=(5, 5), stride=(1, 1), groups=672, bias=False)
          (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            672, 28, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            28, 672, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(112, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (11): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(672, 672, kernel_size=(5, 5), stride=[2, 2], groups=672, bias=False)
          (_bn1): BatchNorm2d(672, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            672, 28, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            28, 672, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(672, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (12): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(1152, 1152, kernel_size=(5, 5), stride=(1, 1), groups=1152, bias=False)
          (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1152, 48, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            48, 1152, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(1152, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (13): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(1152, 1152, kernel_size=(5, 5), stride=(1, 1), groups=1152, bias=False)
          (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1152, 48, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            48, 1152, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(1152, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (14): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(1152, 1152, kernel_size=(5, 5), stride=(1, 1), groups=1152, bias=False)
          (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1152, 48, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            48, 1152, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(1152, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(192, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
        (15): MBConvBlock(
          (_expand_conv): Conv2dDynamicSamePadding(192, 1152, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn0): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_depthwise_conv): Conv2dDynamicSamePadding(1152, 1152, kernel_size=(3, 3), stride=[1, 1], groups=1152, bias=False)
          (_bn1): BatchNorm2d(1152, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_se_reduce): Conv2dStaticSamePadding(
            1152, 48, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_se_expand): Conv2dStaticSamePadding(
            48, 1152, kernel_size=(1, 1), stride=(1, 1)
            (static_padding): Identity()
          )
          (_project_conv): Conv2dDynamicSamePadding(1152, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (_bn2): BatchNorm2d(320, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
          (_swish): MemoryEfficientSwish()
        )
      )
      (_conv_head): Conv2dDynamicSamePadding(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (_bn1): BatchNorm2d(1280, eps=0.001, momentum=0.010000000000000009, affine=True, track_running_stats=True)
      (_avg_pooling): AdaptiveMaxPool2d(output_size=1)
      (_swish): MemoryEfficientSwish()
    )
  )
  (classifier): Linear(in_features=1280, out_features=2, bias=True)
)
loading from checkpoint only weights : /nlsasfs/home/nltm-pilot/sandeshk/icassp/checkpoints/checkpoint_58_maxpool_512.pth.tar
Model missing keys
['classifier.weight', 'classifier.bias']
Model unexpected keys
[]
done loading
Starting To Train
epoch :1 Train loss: 0.312303751707077 Train accuracy: 0.8770713830465264 Valid loss: 0.3381868004798889 Valid accuracy: 0.8607393244104525
epoch :2 Train loss: 0.2565374970436096 Train accuracy: 0.8966698534098152 Valid loss: 0.2957848310470581 Valid accuracy: 0.8789037603569152
epoch :3 Train loss: 0.23350173234939575 Train accuracy: 0.9102931803696622 Valid loss: 0.2896614074707031 Valid accuracy: 0.8833652007648184
epoch :4 Train loss: 0.20670968294143677 Train accuracy: 0.9208891013384322 Valid loss: 0.28264737129211426 Valid accuracy: 0.8938814531548758
epoch :5 Train loss: 0.19824691116809845 Train accuracy: 0.9235181644359465 Valid loss: 0.28858959674835205 Valid accuracy: 0.8897386870618228
epoch :6 Train loss: 0.20174650847911835 Train accuracy: 0.9195347355003187 Valid loss: 0.31659066677093506 Valid accuracy: 0.8824091778202677
epoch :7 Train loss: 0.158103808760643 Train accuracy: 0.9396908859145953 Valid loss: 0.3024771809577942 Valid accuracy: 0.8938814531548758
epoch :8 Train loss: 0.15221181511878967 Train accuracy: 0.9439929891650733 Valid loss: 0.31516003608703613 Valid accuracy: 0.8897386870618228
epoch :9 Train loss: 0.1306048035621643 Train accuracy: 0.949968132568515 Valid loss: 0.31711050868034363 Valid accuracy: 0.8938814531548758
epoch :10 Train loss: 0.12784139811992645 Train accuracy: 0.9502868068833652 Valid loss: 0.3592572808265686 Valid accuracy: 0.8875079668578713
epoch :11 Train loss: 0.11133936047554016 Train accuracy: 0.9580146590184832 Valid loss: 0.3482932448387146 Valid accuracy: 0.887189292543021
epoch :12 Train loss: 0.13532128930091858 Train accuracy: 0.9512428298279159 Valid loss: 0.3936289846897125 Valid accuracy: 0.875717017208413
epoch :13 Train loss: 0.10108613967895508 Train accuracy: 0.9640694710006373 Valid loss: 0.41557776927948 Valid accuracy: 0.8836838750796686
epoch :14 Train loss: 0.07860393822193146 Train accuracy: 0.9724346717654557 Valid loss: 0.3624851107597351 Valid accuracy: 0.8894200127469726
epoch :15 Train loss: 0.06943008303642273 Train accuracy: 0.9745060548119822 Valid loss: 0.39571884274482727 Valid accuracy: 0.890057361376673
epoch :16 Train loss: 0.07359069585800171 Train accuracy: 0.977931803696622 Valid loss: 0.3765416741371155 Valid accuracy: 0.8817718291905673
epoch :17 Train loss: 0.06306032836437225 Train accuracy: 0.9776131293817718 Valid loss: 0.42820319533348083 Valid accuracy: 0.8814531548757171
epoch :18 Train loss: 0.05266731604933739 Train accuracy: 0.982791586998088 Valid loss: 0.4204480051994324 Valid accuracy: 0.8859145952836202
epoch :19 Train loss: 0.0486658550798893 Train accuracy: 0.9811185468451242 Valid loss: 0.511100709438324 Valid accuracy: 0.8865519439133206
epoch :20 Train loss: 0.04053785651922226 Train accuracy: 0.9860579987253028 Valid loss: 0.46596479415893555 Valid accuracy: 0.8891013384321224
epoch :21 Train loss: 0.039803460240364075 Train accuracy: 0.9867750159337157 Valid loss: 0.5535284876823425 Valid accuracy: 0.8833652007648184
epoch :22 Train loss: 0.03884463012218475 Train accuracy: 0.9873326959847036 Valid loss: 0.5115947127342224 Valid accuracy: 0.8789037603569152
epoch :23 Train loss: 0.04781743139028549 Train accuracy: 0.9826322498406629 Valid loss: 0.5345756411552429 Valid accuracy: 0.878585086042065
epoch :24 Train loss: 0.03647876903414726 Train accuracy: 0.9869343530911409 Valid loss: 0.5168476104736328 Valid accuracy: 0.8817718291905673
epoch :25 Train loss: 0.036220043897628784 Train accuracy: 0.9881293817718292 Valid loss: 0.5506584644317627 Valid accuracy: 0.8859145952836202
epoch :26 Train loss: 0.027346044778823853 Train accuracy: 0.9905991077119184 Valid loss: 0.5899479389190674 Valid accuracy: 0.8865519439133206
epoch :27 Train loss: 0.039870429784059525 Train accuracy: 0.987093690248566 Valid loss: 0.5575157999992371 Valid accuracy: 0.8795411089866156
epoch :28 Train loss: 0.02620713599026203 Train accuracy: 0.9913161249203314 Valid loss: 0.5881397724151611 Valid accuracy: 0.8789037603569152
epoch :29 Train loss: 0.03251366317272186 Train accuracy: 0.9887667304015296 Valid loss: 0.5310868620872498 Valid accuracy: 0.8789037603569152
epoch :30 Train loss: 0.026404699310660362 Train accuracy: 0.9917144678138942 Valid loss: 0.530406653881073 Valid accuracy: 0.8859145952836202
epoch :31 Train loss: 0.020881157368421555 Train accuracy: 0.9937858508604207 Valid loss: 0.5976372957229614 Valid accuracy: 0.8894200127469726
epoch :32 Train loss: 0.021088775247335434 Train accuracy: 0.9932281708094327 Valid loss: 0.5908675193786621 Valid accuracy: 0.8852772466539197
epoch :33 Train loss: 0.01984700746834278 Train accuracy: 0.994263862332696 Valid loss: 0.5547841787338257 Valid accuracy: 0.8833652007648184
epoch :34 Train loss: 0.022594427689909935 Train accuracy: 0.9913957934990439 Valid loss: 0.6204259395599365 Valid accuracy: 0.8865519439133206
epoch :35 Train loss: 0.018115578219294548 Train accuracy: 0.9941841937539835 Valid loss: 0.5981149673461914 Valid accuracy: 0.8846398980242193
epoch :36 Train loss: 0.01991185173392296 Train accuracy: 0.9929094964945825 Valid loss: 0.695697546005249 Valid accuracy: 0.8808158062460165
epoch :37 Train loss: 0.02238520234823227 Train accuracy: 0.9930688336520076 Valid loss: 0.6044113039970398 Valid accuracy: 0.8820905035054175
epoch :38 Train loss: 0.0179697647690773 Train accuracy: 0.9951402166985341 Valid loss: 0.6288938522338867 Valid accuracy: 0.8875079668578713
epoch :39 Train loss: 0.012658607214689255 Train accuracy: 0.9960165710643722 Valid loss: 0.6864138841629028 Valid accuracy: 0.8804971319311663
epoch :40 Train loss: 0.010865146294236183 Train accuracy: 0.9972115997450606 Valid loss: 0.5903744697570801 Valid accuracy: 0.8868706182281708
epoch :41 Train loss: 0.02121397666633129 Train accuracy: 0.9941841937539835 Valid loss: 0.5820184946060181 Valid accuracy: 0.8862332695984704
epoch :42 Train loss: 0.01234501600265503 Train accuracy: 0.9961759082217974 Valid loss: 0.6156424283981323 Valid accuracy: 0.8817718291905673
epoch :43 Train loss: 0.01987079158425331 Train accuracy: 0.9939451880178458 Valid loss: 0.6247386336326599 Valid accuracy: 0.8833652007648184
epoch :44 Train loss: 0.011978411115705967 Train accuracy: 0.9972912683237731 Valid loss: 0.5734128355979919 Valid accuracy: 0.8878266411727215
epoch :45 Train loss: 0.013887714594602585 Train accuracy: 0.9964945825366476 Valid loss: 0.6378306746482849 Valid accuracy: 0.8954748247291269
epoch :46 Train loss: 0.019730521366000175 Train accuracy: 0.9950605481198216 Valid loss: 0.7295864820480347 Valid accuracy: 0.8862332695984704
epoch :47 Train loss: 0.020404689013957977 Train accuracy: 0.9932281708094327 Valid loss: 0.6361121535301208 Valid accuracy: 0.8859145952836202
epoch :48 Train loss: 0.017947351559996605 Train accuracy: 0.9950605481198216 Valid loss: 0.5376449823379517 Valid accuracy: 0.8859145952836202
epoch :49 Train loss: 0.019851675257086754 Train accuracy: 0.9938655194391333 Valid loss: 0.6158756613731384 Valid accuracy: 0.8881453154875717
epoch :50 Train loss: 0.01434009987860918 Train accuracy: 0.9960165710643722 Valid loss: 0.6721236705780029 Valid accuracy: 0.887189292543021
max train accuracy : 0.9972912683237731
max valid accuracy : 0.8954748247291269
